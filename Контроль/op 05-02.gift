$CATEGORY: $course$/top/Модуль 2 рівень 2/OP-05-02

::class 01::Класс це -
{
= Шаблон, опис властивостей та методів, що належать одній сутністі
~ Процес передаці інформації від однієї сутності до іншої
~ Глобальна змінна у модулі С++
~ Властивість стурктури чи динамічного масиву в оператівній пам'яті
}

::class 02::Класс це -
{
= Шаблон, опис властивостей та методів, що належать одній сутністі
~ Процес передаці інформації від однієї сутності до іншої
~ Група структур, що описані в модулі або заголовковому файлі
~ Властивість стурктури чи динамічного масиву в оператівній пам'яті
}

::class 03::Класс це -
{
= Шаблон, опис властивостей та методів, що належать одній сутністі
~ Змінна, що утворена за допомогою виклику конструктора
~ Група структур, що описані в модулі або заголовковому файлі
~ Властивість стурктури чи динамічного масиву в оператівній пам'яті
}

::class 04::Класс це -
{
= Шаблон, опис властивостей та методів, що належать одній сутністі
~ Змінна, що утворена за допомогою виклику конструктора
~ Група структур, що описані в модулі або заголовковому файлі
~ Змінна, що утворена шляхом прямого виділення їй динамічної пам'яті
}

::class 05::Властивість це -
{
= Член класу
~ Екземпляр класу
~ Метод класу
~ Покажчик класу
}

::class 06::Властивість це -
{
= Член класу
~ Екземпляр класу
~ Прототип класу
~ Покажчик класу
}

::class 07::Властивість це -
{
= Член класу
~ Функція класу
~ Прототип класу
~ Покажчик класу
}

::class 08::Метод це -
{
= Член класу
~ Властивість класу
~ Прототип класу
~ Покажчик класу
}

::class 09::Метод це -
{
= Член класу
~ Властивість класу
~ Прототип класу
~ Екземпляр класу
}

::class 10::Яка різниця між класом та об'єктом в С++?
{
~ Клас є екземпляром об'єкту, який містить методи та властивості, а об'єкт є описом класу.
= Клас є шаблоном для створення об'єктів, а об'єкт є екземпляром класу.
~ Клас та об'єкт - це синоніми, які використовуються в залежності від контексту.
~ Клас та об'єкт - це абстракції, які не мають відмінностей між собою.
}

::const 01::Конструктор викликається
{
= Під час створення екземпляру класу
~ Під час знищення екземпляру класу
~ Під час виклику методу класу
~ Під час звернення до псевдозмінної this
}

::const 02::Конструктор викликається для
{
= створення екземпляру класу
~ знищення екземпляру класу
~ знищення псевдозмінної this
~ створення прототипу о'єкта
}

::const 03::Ім'я конструктора будь-якого класу - 
{
= дорювнює імені класу
~ __construct
~ counstructor
~ new
}

::const 04::Ім'я конструктора будь-якого класу - 
{
= дорювнює імені класу
~ __construct
~ counstructor
~ create
}

::dest 01::Деструктор викликається
{
~ Під час створення екземпляру класу
= Під час знищення екземпляру класу
~ Під час виклику методу класу
~ Під час звернення до псевдозмінної this
}

::dest 02::Деструктор викликається для
{
~ створення екземпляру класу
= знищення екземпляру класу
~ знищення псевдозмінної this
~ створення прототипу о'єкта
}

::dest 03::Деструктор викликається для
{
~ створення псевдозмінної this
= знищення екземпляру класу
~ знищення псевдозмінної this
~ створення прототипу о'єкта
}

::dest 04::Опис деструктора починається з символу
{
=\~
~\%
~&
~!
}

::dest 05::Опис деструктора починається з символу
{
=\~
~\%
~&
~\=
}

::dest 06::Опис деструктора починається з символу
{
=\~
~*
~&
~\=
}

