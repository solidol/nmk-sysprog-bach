$CATEGORY: $course$/top/OP-03-02

::for 1::Кількість виразів у заголовку циклу for {
    = 3
    ~ 2
    ~ 4
    ~ 1
}

::for 2::Кількість виразів у заголовку циклу for {
    = 3
    ~ 5
    ~ 4
    ~ 0
}

::for 3::Умова роботи циклу for міститься у{
    =другому виразі
    ~першому виразі
    ~третьому виразі
    ~четвертому виразі
}

::for 4::Оберіть пункт, ще не належить циклу for{
    =перевірка умови виходу із циклу
    ~перевірка умови роботи циклу
    ~обчислення виразу після ітерації
    ~обчислення виразу перед входом у цикл
}

::for 5::Оберіть пункт, ще не належить циклу for{
    =перевірка умови виходу із циклу
    ~виконання ітерації
    ~обчислення виразу після ітерації
    ~обчислення виразу перед входом у цикл
}

::while 1::Кількість виразів у заголовку циклу while {
    = 1
    ~ 2
    ~ 4
    ~ 3
}

::while 2::Кількість виразів у заголовку циклу while {
    = 1
    ~ 0
    ~ 4
    ~ 3
}

::while 3::Умова роботи циклу while міститься у{
    =першому виразі
    ~другому виразі
    ~третьому виразі
    ~четвертому виразі
}

::do while 1::Кількість виразів у заголовку циклу do-while {
    = 1
    ~ 2
    ~ 4
    ~ 3
}

::do while 2::Кількість виразів у заголовку циклу do-while {
    = 1
    ~ 0
    ~ 4
    ~ 3
}

::do while 3::Умова роботи циклу do while міститься у{
    =першому виразі
    ~другому виразі
    ~третьому виразі
    ~четвертому виразі
}

::Покажчик 1::Покажчик це {
    =змінна, що містить адресу на певний тип
    ~змінна, що містить адресу незалежно від типу
    ~адреса в оперативній пам'яті
    ~адреса у файлі
}

::Покажчик 2::Покажчик це {
    =змінна, що містить адресу на певний тип
    ~змінна, що містить адресу незалежно від типу
    ~адреса в оперативній пам'яті
    ~адреса на жорсткому диску
}

::Покажчик 3::Оператор взяття адреси це {
    =&
    ~*
    ~\=
    ~&&
}

::Покажчик 4::Оператор взяття адреси це {
    =&
    ~*
    ~**
    ~&&
}

::Покажчик 5::Оператор розіменування (переходу за адресою) це {
    =*
    ~&
    ~+
    ~&&
}

::Покажчик 6::Оператор розіменування (переходу за адресою) це {
    =*
    ~&
    ~+
    ~>>
}

::Покажчик 7::Оператор розіменування (переходу за адресою) це {
    =*
    ~&
    ~+
    ~<<
}

::Покажчик 8::Оберіть правильний варіант створення покажчика {
    =int *pa;
    ~int &pa;
    ~*pa;
    ~int ^pa;
}

::Покажчик 9::Оберіть правильний варіант створення покажчика {
    =int *pa=&a;
    ~int &pa=*a;
    ~*pa=a;
    ~int ^pa=a;
}

::Покажчик 10::Оберіть правильний варіант створення покажчика {
    =int *pa=&a;
    ~int &pa=*a;
    ~*pa=a;
    ~**pa=a;
}

::Покажчик 11::Оберіть правильний варіант виведення значення, на яке посилається змінна-покажчик {
    =cout << *pa;
    ~cout << &pa;
    ~cout << \#pa;
    ~cout << ^pa;
}

::Покажчик 12::Оберіть правильний варіант виведення значення, на яке посилається змінна-покажчик {
    =cout << *pa;
    ~cout << pa;
    ~cout << \#pa;
    ~cout << ^pa;
}

::Покажчик 13::Оберіть правильний варіант отримання адреси змінної {
    =&a;
    ~*a;
    ~^a;
    ~\#a;
}

::Покажчик 14::Оберіть правильний варіант отримання адреси змінної {
    =&a;
    ~*a;
    ~+a;
    ~\#a;
}

::Покажчик 15::Оберіть правильний варіант створення динамічного масиву {
    =pArr = new int[10];
    ~&pArr = new int[10];
    ~pArr = int[10];
    ~*pArr = int[10];
}

::Покажчик 16::Оберіть правильний варіант створення динамічного масиву {
    =pArr = new int[10];
    ~pArr = *int[10];
    ~pArr = int[10];
    ~*pArr = int[10];
}

::Покажчик 17::Оберіть правильний варіант створення динамічного масиву {
    =pArr = new int[10];
    ~pArr = &int[10];
    ~pArr = int[10];
    ~*pArr = int[10];
}

